# config perso
# prompte sur deux lignes coloré avec le résultat de la dernière commande
# host @ nom du dossier
pscolor()
{
    if [ "$?" == "0" ]; then
        echo -e '\e[1;33;44m'
    else
        echo -e '\e[1;97;41m'
    fi
}
export PS1='`pscolor``hostname -s` @\W                                                                                                              \e[0m\n'

# alias
## ls
### ll
alias ll='ls -lrth'
### la
alias la='ls -a'
### lss
alias lss='ls -1 -rt'

## hostname
alias hn='hostname'

## protect rm
alias rm='rm --preserve-root'

## Hexdump 
### Affiche une ligne de 16 octets puis message ascii
alias hext='hexdump -e '\''8/1 "%02X " "\n"'\'' -e '\''8/1 "%c" "\n"'\'''
### 16 octets par ligne
alias hexd='hexdump -v -e '\''16/1 "%02x " "\n"'\'''

## Git
### branch
alias gitb='git branch | grep \*'

### diff filter
gdiff()
{
	git diff $* | grep  ^\+
}

## Screen resume
alias sr="screen -r"

## emacs, revert color, pas utile pour la version 24
#alias emacs='emacs -r'

## dmesg
### tdm, tail dmesg
alias tdm="dmesg -t debug | tail | sed -re 's/^(\[[^]]+\]) /\1\n/'"
### dm
alias dm="dmesg -t debug | sed -re 's/^(\[[^]]+\]) /\1\n/'"
### ndm, nano
alias ndm="dmesg -t debug | sed -re 's/^(\[[^]]+\]) /\1\n/' > /tmp/.ndm && nano /tmp/.ndm"
### ntdm, nano avec les temps sur deux ligne
alias ntdm="dmesg -T debug | sed -re 's/^(\[[^]]+\]) /\1\n/' > /tmp/.ndm && nano /tmp/.ndm"
### cdm, clean 
alias cdm="sudo dmesg -c > /dev/null"

## man in editor
man()
{
/usr/bin/man $* > ~/temp.txt
if [ -s ~/temp.txt ]; then nano ~/temp.txt
fi
}

## Nano
### out in nano with n command
n()
{
$* > ~/.out.txt 2>1
if [ -s ~/.out.txt ]; then nano ~/.out.txt
fi
}

## Make
### mk
mk()
{
make $* 2> ~/.mk.txt 
if [ -s ~/.mk.txt ]; then nano ~/.mk.txt
fi
}

# editor
export EDITOR="nano"

# umask definition
#umask 7

# Proxy
function setproxy() {
    export {http,https,ftp}_proxy='http://add.fr:8080'
}

function unsetproxy() {
    unset {http,https,ftp}_proxy
} 
 
# path
##add sbin
PATH="/sbin":$PATH


# Directory nav
alias cd_left='cd .. && ls'
alias cd_right='cd "$(first_folder)" 2>/dev/null && ls'
alias cd_up='cd "$(prev_folder)" 2>/dev/null && ls'
alias cd_down='cd "$(next_folder)" 2>/dev/null && ls'

prev_folder() {
prev_dirs=$(ls -1 --group-directories-first ..)
IFS=$'\n' dirs=($(ls -1 --group-directories-first ..))
pos_dir=$(echo "$prev_dirs" | grep -n "^$(basename "$(pwd)")$" | perl -pe 's/^(\d+).*/\1/')
pos_prev_dir=$(( $pos_dir - 2 ))
prev_dir=../${dirs["$pos_prev_dir"]}
if [ -d "$prev_dir" ]
then
echo "$prev_dir"
else
echo "/dev/null"
fi
}

next_folder() {
prev_dirs=$(ls -1 --group-directories-first ..)
IFS=$'\n' dirs=($(ls -1 --group-directories-first ..))
pos_dir=$(echo "$prev_dirs" | grep -n "^$(basename "$(pwd)")$" | perl -pe 's/^(\d+).*/\1/')
#array start at 0, but grep starts numerotating at 1
#Hence, there is no need to add 1
next_dir=../${dirs["$pos_dir"]}
if [ -d "$next_dir" -a "$next_dir" != "../" ]
then
echo "../${dirs["$pos_dir"]}"
else
echo "/dev/null"
fi
}

first_folder() {
first_dir=$(ls -1 --group-directories-first . | grep -m 1 "")
if [ -d "$first_dir" ]
then
#without ./, the folder will put printed because of CDPATH
echo "./$first_dir"
else
echo "/dev/null"
fi
}

export HISTIGNORE="cd_*"




cd
